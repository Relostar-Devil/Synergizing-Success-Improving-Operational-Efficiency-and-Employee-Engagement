create database Case_Study_4;
use Case_study_4;

select * from business_operations_dataset;

--Question 1) Which department had the highest average profit margin among its products?
select top 1 department,avg(profit_margin) as pm from business_operations_dataset group by department, profit_margin 
having profit_margin=max(profit_margin) order by pm desc;

--Question 2) Which employee in the IT department had the highest performance score, and what was their role?
select employee_name, employee_role, employee_performance_score, department from business_operations_dataset
where department='IT' and employee_performance_score=(select max(employee_performance_score) from business_operations_dataset);

--Question 3) Identify the product with the highest revenue generated in the HR department.
select top 1 product_name, revenue from business_operations_dataset where department='HR' order by revenue desc;

--Question 4) What is the average customer feedback score for products in the Accessories category, and which product received the highest score?
with cte1 as(
select avg(customer_feedback_score) as feedback from business_operations_dataset where category='Accessories'),
cte2 as (select top 1 product_name, customer_feedback_score from business_operations_dataset where category='Accessories' order by customer_feedback_score desc)
select cte1.feedback,cte2.product_name,cte2.customer_feedback_score from cte1,cte2;

--Question 5)  Which supplier had the highest total inventory level across all departments?
select supplier_name, inventory_level from business_operations_dataset where 
inventory_level=(select max(inventory_level) from business_operations_dataset);

--Question 6) Which product in the Gadgets category had the lowest inventory level?
select product_name, inventory_level from business_operations_dataset where inventory_level=(select min(inventory_level) from business_operations_dataset);

--Question 7) How many employees in the Sales department have completed training programs, and what percentage does this represent of the total employees in that department?
with cte1 as(select count(employee_id) as No_of_employees from business_operations_dataset where training_program_completed=1 and department='Sales'),
cte2 as (select count(employee_id) as No_of_employees from business_operations_dataset where department='Sales')
select cte1.No_of_employees, (cte1.No_of_employees*100/cte2.No_of_employees) as Total_percentage from cte1,cte2;

--Question 8) What is the total number of units sold for all products in the Marketing department, and which product contributed the most to this total?
with cte1 as(select count(units_sold) as total_units from business_operations_dataset where department='Marketing'),
cte2 as (select top 1 product_name, max(units_sold) as most_contribution from business_operations_dataset where
department='Marketing' group by product_name, units_sold order by units_sold desc)
select cte1.total_units, cte2.product_name, cte2.most_contribution from cte1,cte2;

--Question 9) Write a query to rank employees in each department by their revenue generated using a window function.
select employee_name, revenue, department, rank() over(partition by department order by revenue desc) as ranking from business_operations_dataset;

--Question 10) Create a CTE to find the average salary of employees in each department and then select departments where the average salary is above $70,000.
with cte1 as (select department, avg(salary) as Salaries from business_operations_dataset group by department),
cte2 as (select department from business_operations_dataset group by department having avg(salary)>70000)
select distinct cte1.Salaries, cte2.department from cte1, cte2;

--Question 11) Create a view that shows only the product name, revenue, and profit margin for products in the Accessories category.
create view naming as(select product_name, revenue, profit_margin from business_operations_dataset where category='Accessories')
select * from naming;

--Question 12) Write a query to create a non-clustered index on the employee_name column to improve query performance.
create nonclustered index cxi on business_operations_dataset(employee_name);
select * from business_operations_dataset

--Question 13) Create a stored procedure that accepts a department name as a parameter and returns the total revenue generated by that department.
create procedure alpha @wave varchar(50)
as
select sum(revenue) as total_revenue from Business_Operations_Dataset where department=@wave
go
exec alpha @wave='HR';

--Question 14) Create a scalar UDF that calculates the profit from a given product's revenue and profit margin.
create function profit(@revenue float,
@profit_margin float)
returns float
as
begin
return @revenue*(@profit_margin/100)
end;

--Question 15) Provide a query to create a clustered index on the company_id column
create clustered index cix2 on business_operations_dataset(company_id)
select * from Business_Operations_Dataset;



